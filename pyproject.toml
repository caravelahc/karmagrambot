[tool.poetry]
name = "karmagrambot"
version = "0.1.0"
description = "Telegram bot that logs messages (not the contents, for the sake of privacy) and votes."
authors = ["CauÃª Baasch de Souza <cauebs@pm.me>"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.7"
python-telegram-bot = "^11.1"
dataset = "^1.1"

[tool.poetry.dev-dependencies]
flake8 = "^3.7"
jedi = "^0.13.2"
mypy = "^0.740.0"
pylint = "^2.6"
pylint-fail-under = "^0.3.0"
pylint_quotes = "^0.2.1"
isort = "^5.6.4"
invoke = "^1.2"
black = "^19.3b0"

[tool.poetry.scripts]
karmagrambot = "karmagrambot:run"

[tool.black]
skip_string_normalization = true

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.isort]
profile = "hug"
line_length = 100

[tool.pylint]
    [tool.pylint.MASTER]
    ignore = "CVS"
    persistent = "yes"
    load-plugins = "pylint_quotes"
    string-quote = "single"
    triple-quote = "double"
    docstring-quote = "double"

    [tool.pylint.'MESSAGES CONTROL']
    disable = [
        "locally-disabled",
        "too-many-return-statements",
    ]

    [tool.pylint.REFACTORING]
    max-nested-blocks = 5

    [tool.pylint.MISCELLANEOUS]
    notes = [
        'FIXME',
        'XXX',
        'TODO',
    ]

    [tool.pylint.TYPECHECK]
    contextmanager-decorators = [
        'contextlib',
        'contextmanager',
    ]
    ignore-mixin-members = 'yes'
    ignore-on-opaque-inference = 'yes'
    ignored-classes = [
        'optparse.Values',
        'thread._local',
        '_thread._local',
    ]
    missing-member-hint = 'yes'
    missing-member-hint-distance = 1
    missing-member-max-choices = 1


    [tool.pylint.REPORTS]
    output-format = "text"
    files-output = "no"
    reports = "yes"

    [tool.pylint.'LOGGING']
    logging-modules = 'logging'

    [tool.pylint.VARIABLES]
    allow-global-unused-variables = 'yes'
    callbacks = [
        'cb_',
        '_cb',
    ]
    dummy-variables-rgx = '_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_'
    ignored-argument-names ='_.*|^ignored_|^unused_'
    init-import = 'no'
    redefining-builtins-modules = [
        "six.moves",
        "future.builtins",
    ]

    [tool.pylint.SIMILARITIES]
    ignore-comments = 'yes'
    ignore-docstrings = 'yes'
    ignore-imports = 'no'
    min-similarity-lines = 4

    [tool.pylint.SPELLING]
    spelling-store-unknown-words = 'no'

    [tool.pylint.IMPORTS]
    deprecated-modules = "optparse"

    [tool.pylint.CLASSES]
    defining-attr-methods = [
        "__init__",
        "__new__",
        "setUp",
    ]
    valid-classmethod-first-arg = "cls"
    valid-metaclass-classmethod-first-arg = "mcs"
    exclude-protected = [
        "_asdict",
        "_fields",
        "_replace",
        "_source",
        "_make",
    ]

    [tool.pylint.EXCEPTIONS]
    overgeneral-exceptions = "Exception"